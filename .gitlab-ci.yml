variables:
  COMPOSER_CACHE_DIR: "/cache/composer"
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"

stages:
  - test
  - docs
  - deploy

# Test template
.test: &test-template
  stage: test
  image: webdevops/php:${PHP_VERSION}
  before_script:
    - pecl channel-update pecl.php.net
    - pecl install pcov
    - docker-php-ext-enable pcov
    - composer self-update --${COMPOSER_VERSION-2}
    - composer --version
    - php --version
  script:
    - composer req --dev "composer/composer:^${COMPOSER_VERSION-2}.0" --no-progress
    - >
      if [[ $TEST_COMPATIBILITY ]]; then
        composer require --dev pcov/clobber
        vendor/bin/pcov clobber
      fi
    - composer install --no-progress
    - COMPOSER_PROCESS_TIMEOUT=1000 composer test:ci -- --testdox
  retry:
    max: 2
    when: script_failure
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    reports:
      junit: .build/coverage/junit.xml
  only:
    - branches

# Test: PHP 7.1 & Composer v1
test:php7.1:v1:
  <<: *test-template
  variables:
    PHP_VERSION: "7.1"
    TEST_COMPATIBILITY: "1"
    COMPOSER_VERSION: "1"

# Test: PHP 7.2 & Composer v1
test:php7.2:v1:
  <<: *test-template
  variables:
    PHP_VERSION: "7.2"
    COMPOSER_VERSION: "1"

# Test: PHP 7.3 & Composer v1
test:php7.3:v1:
  <<: *test-template
  variables:
    PHP_VERSION: "7.3"
    COMPOSER_VERSION: "1"

# Test: PHP 7.4 & Composer v1
test:php7.4:v1:
  <<: *test-template
  variables:
    PHP_VERSION: "7.4"
    COMPOSER_VERSION: "1"

# Test: PHP 7.1 & Composer v2
test:php7.1:v2:
  <<: *test-template
  variables:
    PHP_VERSION: "7.1"
    TEST_COMPATIBILITY: "1"
    COMPOSER_VERSION: "2"

# Test: PHP 7.2 & Composer v2
test:php7.2:v2:
  <<: *test-template
  variables:
    PHP_VERSION: "7.2"
    COMPOSER_VERSION: "2"

# Test: PHP 7.3 & Composer v2
test:php7.3:v2:
  <<: *test-template
  variables:
    PHP_VERSION: "7.3"
    COMPOSER_VERSION: "2"

# Test: PHP 7.4 & Composer v2
test:php7.4:v2:
  <<: *test-template
  variables:
    PHP_VERSION: "7.4"
    COMPOSER_VERSION: "2"

docs:
  stage: docs
  image: docker
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose run docs build
  artifacts:
    paths:
      - site/
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success

deploy:docs:
  stage: deploy
  image: instrumentisto/rsync-ssh
  dependencies:
    - docs
  before_script:
    - which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan cp140.sp-server.net >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - 'rsync -avz --chmod=Du=rwx,Dgo=rx,Fu=rw,Fog=r site/ eliashae@cp140.sp-server.net:/home/eliashae/html/docs.elias-haeussler.de/composer-update-check/'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
